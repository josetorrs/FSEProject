{"ast":null,"code":"var _jsxFileName = \"E:\\\\git\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.state.date.toLocaleTimeString());\n  }\n\n}\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      password: ''\n    };\n    this.handleName = this.handleName.bind(this);\n    this.handlePass = this.handlePass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleName(event) {\n    this.setState({\n      name: event.target.value\n    });\n    console.log(this.state.name);\n  }\n\n  handlePass(event) {\n    this.setState({\n      password: event.target.value\n    });\n    console.log(this.state.password);\n  }\n\n  handleSubmit(event) {\n    console.log(\"here\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"uname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"uname\",\n      value: this.state.name,\n      name: \"uname\",\n      onChange: this.handleName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"pass\",\n      value: this.state.password,\n      name: \"pass\",\n      onChange: this.handlePass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, \"Welcome\"), React.createElement(Clock, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}), React.createElement(Login, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["E:/git/my-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Clock","Component","constructor","props","state","date","Date","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render","toLocaleTimeString","Login","name","password","handleName","bind","handlePass","handleSubmit","event","target","value","console","log","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass Clock extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {date: new Date()}\n  }\n\n  componentDidMount(){\n    this.timerID = setInterval(\n      () => this.tick(), \n      1000\n      )\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.timerID);\n  }\n\n  tick(){\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render(){\n    return(\n      <h4>{this.state.date.toLocaleTimeString()}</h4>\n    );\n  }\n}\n\nclass Login extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {name: '', password: ''}\n\n    this.handleName = this.handleName.bind(this);\n    this.handlePass = this.handlePass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleName(event){\n    this.setState({name: event.target.value});\n    console.log(this.state.name);\n  }\n\n  handlePass(event){\n    this.setState({password: event.target.value});\n    console.log(this.state.password);\n  }\n\n  handleSubmit(event){\n    console.log(\"here\");\n  }\n\n  render(){\n    return(\n      <div>\n        <form>\n          <label for=\"uname\">Username:</label>\n          <input \n            type=\"text\" \n            id=\"uname\" \n            value={this.state.name} \n            name=\"uname\" \n            onChange={this.handleName}/>\n          <br />\n          <label for=\"pass\">Password:</label>\n          <input \n            type=\"password\" \n            id=\"pass\" \n            value={this.state.password} \n            name=\"pass\"\n            onChange={this.handlePass}/>\n          <br />\n          <input \n            type=\"submit\" \n            value=\"Submit\"\n            onSubmit={this.handleSubmit}/>\n        </form>\n      </div>\n    );\n  }\n}\n\n\n\nReactDOM.render(\n  <div>\n    <h4>Welcome</h4>\n    <Clock/>\n    <Login/>\n\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}